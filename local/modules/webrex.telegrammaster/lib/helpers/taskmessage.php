<?php

namespace Webrex\TelegramMaster\Helpers;

use Bitrix\Main\Type\Date;
use Starlabs\Project\Grooming\Deal;
use Starlabs\Project\Grooming\Tasks;
use Webrex\Telegram\Model\TelegramChatMessageTable;

class TaskMessage
{
    private static $daysOfWeek = [
        0 => '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ',
        1 => '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
        2 => '–≤—Ç–æ—Ä–Ω–∏–∫',
        3 => '—Å—Ä–µ–¥–∞',
        4 => '—á–µ—Ç–≤–µ—Ä–≥',
        5 => '–ø—è—Ç–Ω–∏—Ü–∞',
        6 => '—Å—É–±–±–æ—Ç–∞',
    ];
    public static function prepareTodayMessages($masterId)
    {
        $tasks = Tasks::getTodayMasterTasks($masterId);
        return self::prepareTasksMessages($tasks);
    }

    public static function prepareWeekMessages($masterId)
    {
        $tasks = Tasks::getWeekMasterTasks($masterId);
        return self::prepareTasksMessages($tasks);
    }

    public static function prepareMonthMessages($masterId)
    {
        $tasks = Tasks::getMonthMasterTasks($masterId);
        return self::prepareTasksMessages($tasks);
    }

    private static function prepareTasksMessages($tasks)
    {
        $arMessages = [];
        $days = [];
        foreach ($tasks as $task) {
            $taskDate = new Date($task['START_DATE_PLAN'], 'd.m.Y H:i:s');
            $taskDay = $taskDate->format('d.m.Y');
            if (!in_array($taskDay, $days)) {
                $days[] = $taskDay;
                $arMessages[] = [
                    'TEXT' => '<b>‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨
–ó–∞–¥–∞—á–∏ –Ω–∞ ' . $taskDay . ' (' . self::$daysOfWeek[$taskDate->format('w')] . '):
‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨</b>',
                    'BUTTONS' => []
                ];
            }
            $arTaskMessage = self::prepareTaskMessage($task);
            $arMessages[] = $arTaskMessage;
        }
        return $arMessages;
    }

    private static function inlineprepareTasksMessages($tasks)
    {
        $arMessages = [];
        $days = [];
        foreach ($tasks as $taskId => $task) {
            $taskDate = new Date($task['START_DATE_PLAN'], 'd.m.Y H:i:s');
            $taskDay = $taskDate->format('d.m.Y');
            if (!in_array($taskDay, $days)) {
                $days[] = $taskDay;
                $arMessages[0] .= '
<b>‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨‚è¨
–ó–∞–¥–∞—á–∏ –Ω–∞ ' . $taskDay . ' (' . self::$daysOfWeek[$taskDate->format('w')] . '):</b>

'
                ;
            }
            $arTaskMessage = self::prepareTaskMessage($task);
            $arMessages[0] .= '
' . $arTaskMessage['TEXT'] . '
/edit_' . $taskId . ' ‚¨ÜÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å‚¨ÜÔ∏è
/finish_' . $taskId . ' ‚¨ÜÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å‚¨ÜÔ∏è
';
        }
        return $arMessages;
    }

    public static function prepareTaskMessage($arTask)
    {
        $arTask['DESCRIPTION'] = str_replace('<br>', '
', $arTask['DESCRIPTION']);
        $arMessage['BUTTONS'] = [
            'inline_keyboard' => [
                [
                    [
                        'text'          => '–ó–∞–≤–µ—Ä—à–∏—Ç—å‚¨ÜÔ∏è',
                        'callback_data' => '/finish',
                    ],
                    [
                        'text'          => '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å‚¨ÜÔ∏è',
                        'callback_data' => '/edit',
                    ],
                ],
            ]
        ];
        $arMessage['TEXT'] = $arTask['DESCRIPTION'];
        $arMessage['CODE'] = TelegramChatMessageTable::TASK_MESSAGE_PREFIX . $arTask['ID'];
        return $arMessage;
    }

    public static function prepareTaskMessageByTaskId($taskId)
    {
        $arTask = Tasks::getById($taskId);
        return self::prepareTaskMessage($arTask);
    }

    public static function prepareFinishMessage($taskId)
    {
        $arTask = Tasks::getById($taskId);
        $arTask['DESCRIPTION'] = str_replace('<br>', '
', $arTask['DESCRIPTION']);
        $dealId = explode('D_', $arTask['UF_CRM_TASK'][0])[1];
        $arMessage['BUTTONS'] = [
            'inline_keyboard' => [
                [
                    [
                        'text'          => '‚¨ÖÔ∏è–û—Ç–º–µ–Ω–∞',
                        'callback_data' => '/back',
                    ],
                ],
                [
                    [
                        'text'          => '‚úÖ –£—Å–ª—É–≥–∞ –æ–∫–∞–∑–∞–Ω–∞',
                        'callback_data' => '/success',
                    ],
                    [
                        'text'          => '‚ùå –ù–µ –ø—Ä–∏—à–µ–ª',
                        'callback_data' => '/fail',
                    ],
                ],
            ]
        ];

        $Cashback = new \Starlabs\Project\Grooming\Cashback($dealId);
        $cashbackBalance = $Cashback->getAvailableCashback();

        if ($Cashback->getCurrentDeal()->get(Deal::FIELD_USE_CASHBACK_CODE) && $cashbackBalance > 0) {
            $sumString = 'üíµ <b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ - ' . ($Cashback->getCurrentDeal()->getOpportunity() - $cashbackBalance) . "—Ä—É–±. (—Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏ –ø–æ –∫–µ—à–±—ç–∫—É - " . $cashbackBalance . '—Ä—É–±.)</b>';
        } else {
            $sumString = 'üíµ <b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ - ' . $Cashback->getCurrentDeal()->getOpportunity() . '—Ä—É–±.</b>';
        }

        $arMessage['TEXT'] = $arTask['DESCRIPTION'] . '

' . $sumString;
        $arMessage['CODE'] = TelegramChatMessageTable::TASK_MESSAGE_PREFIX . $taskId;
        return $arMessage;
    }

    public static function prepareEditMessage($taskId)
    {
        $arTask = Tasks::getById($taskId);
        $arTask['DESCRIPTION'] = str_replace('<br>', '
', $arTask['DESCRIPTION']);
        $dealId = explode('D_', $arTask['UF_CRM_TASK'][0])[1];
        $Cashback = new \Starlabs\Project\Grooming\Cashback($dealId);
        $cashbackBalance = $Cashback->getAvailableCashback();
        $cashbackButton = [
            'text' => $Cashback->getCurrentDeal()->get(Deal::FIELD_USE_CASHBACK_CODE) ? '‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å –∫–µ—à–±–µ–∫' : '‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–µ—à–±–µ–∫',
            'callback_data' => $Cashback->getCurrentDeal()->get(Deal::FIELD_USE_CASHBACK_CODE) ? '/disable-cashback' : '/enable-cashback',
        ];
        $arMessage['BUTTONS'] = [
            'inline_keyboard' => [
                [
                    [
                        'text'          => '‚¨ÖÔ∏è–û—Ç–º–µ–Ω–∞',
                        'callback_data' => '/back',
                    ],
                ],
                [
                    $cashbackButton,
                ],
                [
                    [
                        'text'          => '–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å',
                        'callback_data' => '/price',
                    ],
                ],
            ]
        ];

        if ($cashbackBalance > 0) {
            $sumString = '<b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ - ' . ($Cashback->getCurrentDeal()->getOpportunity() - $cashbackBalance) . "—Ä—É–±. (—Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏ –ø–æ –∫–µ—à–±—ç–∫—É - " . $cashbackBalance . '—Ä—É–±.)</b>';
        } else {
            $sumString = '<b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ - ' . $Cashback->getCurrentDeal()->getOpportunity() . '—Ä—É–±.</b>';
        }

        $arMessage['TEXT'] = $arTask['DESCRIPTION'] . '

' . $sumString;
        $arMessage['CODE'] = TelegramChatMessageTable::TASK_MESSAGE_PREFIX . $taskId;
        return $arMessage;
    }

    public static function preparePriceMessage($taskId)
    {
        $arTask = Tasks::getById($taskId);
        $arTask['DESCRIPTION'] = str_replace('<br>', '
', $arTask['DESCRIPTION']);
        foreach ($arTask["UF_CRM_TASK"] as $string) {
            $arString = explode('_', $string);
            if ($arString[0] == \CCrmOwnerTypeAbbr::Deal) {
                $dealId = $arString[1];
                break;
            }
        }
        if (!$dealId) {
            throw new \Exception('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å–¥–µ–ª–∫–∞');
        }
        $arMessage['BUTTONS'] = [
            'inline_keyboard' => [
                [
                    [
                        'text'          => '‚¨ÖÔ∏è–û—Ç–º–µ–Ω–∞',
                        'callback_data' => '/cancel-update',
                    ],
                ],
            ]
        ];

        $arMessage['TEXT'] = $arTask['DESCRIPTION'] . '
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ä—É–±–ª—è—Ö —Å–æ–æ–±—â–µ–Ω–∏–µ–º: ‚¨áÔ∏è';
        $arMessage['CODE'] = TelegramChatMessageTable::DEAL_PRICE_MESSAGE_PREFIX . $dealId;
        return $arMessage;
    }
}